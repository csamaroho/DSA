//{ Driver Code Starts
import java.util.*;
import java.io.*;
public class Main{
    public static void main(String args[]) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter ot = new PrintWriter(System.out);
        int t = Integer.parseInt(br.readLine().trim());
        Solution soln = new Solution();
        while(t-- > 0){
            int n = Integer.parseInt(br.readLine().trim());
            String s[] = br.readLine().trim().split(" ");
            int prices[] = new int[n];
            for(int i = 0; i < n; i++)
                prices[i] = Integer.parseInt(s[i]);
            s = br.readLine().trim().split(" ");
            int dislike[] = new int[n];
            for(int i = 0; i < n; i++)
                dislike[i] = Integer.parseInt(s[i]);
            ot.println(soln.MinCost(n, prices, dislike));
        }
        ot.close();
    }
} 
// } Driver Code Ends


class Solution{
    public int MinCost(int n, int prices[], int dislike[]){
        // Code Here.
        int min=Integer.MAX_VALUE;
        int minp=0;
        
        for(int i=0;i<n;i++)
        {
        if(prices[i]<min)
        {
            min=prices[i];
            minp=i;
        }
        }
        
        int min2=Integer.MAX_VALUE;
    
        for(int i=0;i<n;i++)
        {
            if(prices[i]>min&&prices[i]<min2&&dislike[i]!=dislike[minp])
            {
                min2=prices[i];
            }
        }
        if(min2==Integer.MAX_VALUE) return -1;
        else return min+min2;
    
    }
}
